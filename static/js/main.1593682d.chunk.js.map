{"version":3,"sources":["components/Gif.js","services/getGifs.js","components/ListOfGifs.js","components/ApikeyManager.js","components/GifDetail.js","services/getGifDetail.js","pages/GifDetailPage.js","App.js","reportWebVitals.js","index.js"],"names":["Gif","title","id","url","href","className","src","alt","apikey","localStorage","getItem","a","keyword","apiURL","fetch","json","response","data","console","log","undefined","gifs","map","image","images","downsized_medium","ListOfGifs","params","useState","setGifs","loading","setLoading","useEffect","GetGifs","then","ApikeyManager","setApikey","placeholder","value","onChange","event","target","onClick","setItem","GifDetail","directUrl","rating","rel","embed_url","GifDetailPage","gif","setGif","GetGifById","App","setKeyword","history","useHistory","push","to","component","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1593682d.chunk.js","sourcesContent":["import { React } from 'react';\nimport { Link } from \"wouter\";\nimport './Gif.css'\n\nexport default function Gif({title, id, url}){\n\n    return <Link href={`/gifdetail/${id}`} className=\"Gif\">\n              <h4>{title}</h4>\n              <p>Id:<small>{id}</small></p>\n              <img src={url} alt={title}/>\n            </Link>\n}","const apikey = localStorage.getItem(\"giphy_apikey\") || \"\";\n\nexport async function GetGifs({keyword = \"morty\"} = {}){\n    const apiURL = `https://api.giphy.com/v1/gifs/search?api_key=${apikey}&q=${keyword}&limit=5&offset=0&rating=g&lang=en`;\n    try {\n        if (apikey !== \"\"){\n\n            const response = await (await fetch(apiURL)).json();\n            const {data} = response || {data: []};\n            console.log(\"DATA:\",data)\n          if (data === undefined) return []\n            const gifs = data?.map(image => {\n                const {images, title, id} = image;\n                const {url} = images.downsized_medium;\n        \n                return {\n                    id,\n                    title,\n                    url\n                }\n            });\n            console.log(gifs);\n            return gifs;\n        }\n        return [];\n        \n    } catch (error) {\n        console.log(\"ERROR:\",error)\n    }\n}","import { React, useState, useEffect } from 'react';\n\nimport Gif from './Gif';\nimport { GetGifs } from '../services/getGifs';\n\n\nexport default function ListOfGifs({params}){\n     const {keyword} = params;\n    const [gifs, setGifs] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(()=>{\n        setLoading(true);\n        GetGifs({keyword: keyword}).then(gifs => {\n            setLoading(false);\n            setGifs(gifs)\n        });\n        \n    }, [keyword])\n\n\n    if (loading) return <span>Cargando...</span>\n\n    return <div>\n        {\n\n            gifs.map(({id, title, url}) => <Gif \n                key={id}\n                title={title} \n                id={id} \n                url={url}/>\n            )   \n        }\n    </div>\n      \n}","import { React, useState, useEffect } from 'react';\n\nexport default function ApikeyManager(){\n    const [apikey, setApikey] = useState(localStorage.getItem(\"giphy_apikey\") || \"\")\n    \n    useEffect(()=>{\n        // setLoading(true);\n        // getGifs({keyword: keyword}).then(gifs => {\n        //     setLoading(false);\n        //     setGifs(gifs)\n        // });\n        \n    }, [apikey])\n    return (\n        <>\n        <input placeholder=\"Insert Apikey...\" value={apikey} onChange={(event) => setApikey(event.target.value)}></input>\n        <button onClick={()=> localStorage.setItem(\"giphy_apikey\", apikey)}>{apikey !== \"\" ? \"Change\" : \"Add\"} Apikey</button>\n        </>\n    )\n}","import { React } from 'react';\n\nexport default function GifDetail({title, id, url, directUrl, rating}){\n    \n    return (\n        <div>\n            Detail gif\n            <div>Id: {id}</div>\n            <div>Title: {title}</div>\n            <div>DirectUrl: <a href={directUrl} target=\"_blank\" rel=\"noreferrer\">{directUrl}</a></div>\n            <div>Rating: {rating}</div>\n            <img src={url} alt={title}/>\n        </div>\n    )\n}","const apikey = localStorage.getItem(\"giphy_apikey\") || \"\";\n\nexport async function GetGifById(id = \"\"){\n    const apiURL = `https://api.giphy.com/v1/gifs/${id}?api_key=${apikey}`;\n    try {\n        if (apikey !== \"\"){\n\n            const response = await (await fetch(apiURL)).json();\n            const {data} = response || {data: []};\n            console.log(\"DATA:\",data)\n          if (data === undefined || data.title === undefined) return null\n            \n                const {images, title, id, rating, embed_url: directUrl} = data;\n                const {url} = images.downsized_medium;\n        \n                return {\n                    id,\n                    title,\n                    url,\n                    directUrl,\n                    rating\n                }\n            \n        }\n        return null;\n        \n    } catch (error) {\n        console.log(\"ERROR:\",error)\n    }\n}","import { React, useState, useEffect } from 'react';\nimport GifDetail from '../components/GifDetail';\nimport { GetGifById } from '../services/getGifDetail';\n\n\nexport default function GifDetailPage({params}){\n    const {id} = params;\n    const [gif, setGif] = useState({});\n    console.log(\"GifDetailPage:\", id)\n    const [loading, setLoading] = useState(false);\n    useEffect(()=>{\n        setLoading(true);\n        \n        GetGifById(id).then(gif => {\n            setLoading(false);\n            setGif(gif)\n            console.log(gif)\n        });\n        \n    }, [id])\n    \n\n    if (loading) return <span>Cargando...</span>\n\n\n    return (\n        gif ? (<div>\n            <h1>Gif Detail</h1>\n            <GifDetail\n                title={gif.title}\n                id={gif.id}\n                url={gif.url}\n                directUrl={gif.directUrl}\n                rating={gif.rating}\n            />\n        </div>): (<div>No data to display</div> )\n    )\n}","import './App.css';\nimport React, { useState } from 'react';\nimport  ListOfGifs from './components/ListOfGifs';\nimport ApikeyManager from './components/ApikeyManager';\nimport { Link, Route } from \"wouter\";\nimport { useHistory } from \"react-router-dom\";\nimport GifDetailPage from './pages/GifDetailPage';\n\nfunction App() {\n  const [keyword, setKeyword] = useState('Panda');\n  const history = useHistory();\n  //console.log(history)\n\n  const handlerSearchClick = () => history.push(`/gifsearch/${keyword}`)\n  return (\n    <div className=\"App\">\n      <section className=\"App-content\">\n        <h1>App</h1>\n        <label>Search keyword</label>\n        <input value={keyword} onChange={(event)=> setKeyword(event.target.value)}></input>\n        <button onClick={handlerSearchClick}>Search</button>\n        <ApikeyManager/>\n        <Link to=\"/gifsearch/panda\">Gifs de pandas</Link>\n        <Link to=\"/gifsearch/perro\">Gifs de perros</Link>\n        <Link to=\"/gifsearch/gato\">Gifs de gatos</Link>\n\n        <Route\n          component={ListOfGifs}\n          path=\"/gifsearch/:keyword\"\n        />\n        <Route\n          component={GifDetailPage}\n          path=\"/gifdetail/:id\"\n        />\n       \n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}