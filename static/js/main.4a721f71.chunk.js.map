{"version":3,"sources":["contexts/ApikeyManagerContext/index.js","contexts/functions.js","components/Gif.js","services/getGifs.js","components/ListOfGifs.js","components/ApikeyManager.js","components/GifDetail.js","services/getGifDetail.js","pages/GifDetailPage.js","App.js","reportWebVitals.js","index.js"],"names":["ApikeyContext","createContext","Provider","ApikeyProvider","Consumer","children","key","value","useState","item","window","localStorage","getItem","JSON","parse","error","console","Key","setKey","newValue","setItem","stringify","useStateLocal","Apikey","setApikey","Gif","title","id","url","to","className","src","alt","a","keyword","log","apiURL","fetch","json","response","data","undefined","gifs","map","image","images","downsized_medium","ListOfGifs","useParams","setGifs","loading","setLoading","useContext","useEffect","GetGifs","then","ApikeyManager","placeholder","onChange","event","target","GifDetail","directUrl","rating","href","rel","embed_url","GifDetailPage","gif","setGif","GetGifById","App","setKeyword","history","useHistory","onClick","push","component","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a721f71.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nimport { useStateLocal } from '../functions'\n\nconst ApikeyContext = createContext();\n\nconst { Provider, Consumer} = ApikeyContext;\n\nconst ApikeyProvider = ({ children }) => {\n    const [Apikey, setApikey] = useStateLocal(\"Apikey\", \"\");\n    return (\n        <Provider\n            value={\n                {\n                    Apikey, setApikey\n                }\n            }\n        >\n            { children }\n        </Provider>\n    )\n}\n\nexport { ApikeyProvider, Consumer as ApikeyConsumer, ApikeyContext };","import { useState } from 'react';\n\nexport const useStateLocal = (key, value) =>{\n\n    const [Key, setKey] = useState( () => {\n\n        try {\n            \n            const item = window.localStorage.getItem(key);\n            return item ? JSON.parse(item) : value;\n            \n        } catch (error) {\n            console.error(\"error en custom hook:\",error);\n            return value;\n        }\n\n    });\n\n    const setValue = (newValue) => {\n        try {\n\n            window.localStorage.setItem(key, JSON.stringify(newValue));\n            setKey(newValue);\n            \n        } catch (error) {\n            console.error(\"error en custom hook, set value:\",error);\n            \n        }\n    }\n\n    return [\n        Key,\n        setValue\n    ];\n}","import { React } from 'react';\nimport { Link } from \"react-router-dom\";\nimport './Gif.css'\n\nexport default function Gif({title, id, url}){\n\n    return <Link to={`/gifdetail/${id}`} className=\"Gif\">\n              <h4>{title}</h4>\n              <p>Id:<small>{id}</small></p>\n              <img src={url} alt={title}/>\n            </Link>\n}","export async function GetGifs({keyword = \"morty\"} = {}, Apikey){\n    \n    // const { Apikey } = useContext(ApikeyContext)\n    //Para usar el apikey desde el .env usar esto\n    // const Apikey = process.env.REACT_APP_APIKEY;\n\n    console.log(Apikey);\n\n    const apiURL = `https://api.giphy.com/v1/gifs/search?api_key=${Apikey}&q=${keyword}&limit=5&offset=0&rating=g&lang=en`;\n    try {\n        if (Apikey !== \"\"){\n\n            const response = await (await fetch(apiURL)).json();\n            const {data} = response || {data: []};\n            console.log(\"DATA:\",data)\n          if (data === undefined) return []\n            const gifs = data?.map(image => {\n                const {images, title, id} = image;\n                const {url} = images.downsized_medium;\n        \n                return {\n                    id,\n                    title,\n                    url\n                }\n            });\n            console.log(gifs);\n            return gifs;\n        }\n        return [];\n        \n    } catch (error) {\n        console.log(\"ERROR:\",error)\n    }\n}","import { React, useState, useEffect, useContext } from 'react';\nimport { ApikeyContext } from '../contexts/ApikeyManagerContext';\nimport { useParams } from 'react-router-dom'\nimport Gif from './Gif';\nimport { GetGifs } from '../services/getGifs';\n\n\nexport default function ListOfGifs(){\n    const { keyword } = useParams();\n    const [gifs, setGifs] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const { Apikey } = useContext(ApikeyContext)\n\n    useEffect(()=>{\n        setLoading(true);\n        GetGifs({keyword: keyword}, Apikey).then(gifs => {\n            setLoading(false);\n            setGifs(gifs)\n        });\n        \n    }, [keyword])\n\n\n    if (loading) return <span>Cargando...</span>\n\n    return <div>\n        {\n\n            gifs.map(({id, title, url}) => <Gif \n                key={id}\n                title={title} \n                id={id} \n                url={url}/>\n            )   \n        }\n    </div>\n      \n}","import { React, useState, useEffect, useContext } from 'react';\nimport { ApikeyContext } from '../contexts/ApikeyManagerContext';\n\nexport default function ApikeyManager(){\n    const { Apikey, setApikey } = useContext(ApikeyContext)\n    // const [apikey, setApikey] = useState(localStorage.getItem(\"giphy_apikey\") || \"\")\n    \n    useEffect(()=>{\n        // setLoading(true);\n        // getGifs({keyword: keyword}).then(gifs => {\n        //     setLoading(false);\n        //     setGifs(gifs)\n        // });\n        \n    }, [])\n    return (\n        <>\n        <input placeholder=\"Insert Apikey...\" value={Apikey} onChange={(event) => setApikey(event.target.value)}></input>\n        {/* <button onClick={()=> localStorage.setItem(\"giphy_apikey\", apikey)}>{apikey !== \"\" ? \"Change\" : \"Add\"} Apikey</button> */}\n        </>\n    )\n}","import { React } from 'react';\n\nexport default function GifDetail({title, id, url, directUrl, rating}){\n    \n    return (\n        <div>\n            Detail gif\n            <div>Id: {id}</div>\n            <div>Title: {title}</div>\n            <div>DirectUrl: <a href={directUrl} target=\"_blank\" rel=\"noreferrer\">{directUrl}</a></div>\n            <div>Rating: {rating}</div>\n            <img src={url} alt={title}/>\n        </div>\n    )\n}","export async function GetGifById(id = \"\", Apikey){\n\n    //Para usar el apikey desde el .env usar esto\n    // const Apikey = process.env.REACT_APP_APIKEY;\n    // console.log(Apikey);\n\n    const apiURL = `https://api.giphy.com/v1/gifs/${id}?api_key=${Apikey}`;\n    try {\n        if (Apikey !== \"\"){\n\n            const response = await (await fetch(apiURL)).json();\n            const {data} = response || {data: []};\n            console.log(\"DATA:\",data)\n          if (data === undefined || data.title === undefined) return null\n            \n                const {images, title, id, rating, embed_url: directUrl} = data;\n                const {url} = images.downsized_medium;\n        \n                return {\n                    id,\n                    title,\n                    url,\n                    directUrl,\n                    rating\n                }\n            \n        }\n        return null;\n        \n    } catch (error) {\n        console.log(\"ERROR:\",error)\n    }\n}","import { React, useState, useEffect, useContext } from 'react';\nimport { ApikeyContext } from '../contexts/ApikeyManagerContext';\n\nimport { useParams } from 'react-router-dom'\nimport GifDetail from '../components/GifDetail';\nimport { GetGifById } from '../services/getGifDetail';\n\n\nexport default function GifDetailPage(){\n    const { id } = useParams();\n    const [gif, setGif] = useState({});\n    console.log(\"GifDetailPage:\", id)\n    const [loading, setLoading] = useState(false);\n    const { Apikey } = useContext(ApikeyContext)\n\n    useEffect(()=>{\n        setLoading(true);\n        \n        GetGifById(id, Apikey).then(gif => {\n            setLoading(false);\n            setGif(gif)\n            console.log(gif)\n        });\n        \n    }, [id])\n    \n\n    if (loading) return <span>Cargando...</span>\n\n\n    return (\n        gif ? (<div>\n            <h1>Gif Detail</h1>\n            <GifDetail\n                title={gif.title}\n                id={gif.id}\n                url={gif.url}\n                directUrl={gif.directUrl}\n                rating={gif.rating}\n            />\n        </div>): (<div>No data to display</div> )\n    )\n}","import './App.css';\nimport React, { useState } from 'react';\nimport  ListOfGifs from './components/ListOfGifs';\nimport ApikeyManager from './components/ApikeyManager';\nimport { useHistory, Link, Route } from \"react-router-dom\";\nimport GifDetailPage from './pages/GifDetailPage';\n\nfunction App() {\n  const [keyword, setKeyword] = useState('Panda');\n  const history = useHistory();\n  //console.log(history)\n\n  const handlerSearchClick = () => history.push(`/gifsearch/${keyword}`)\n  return (\n    <div className=\"App\">\n      <section className=\"App-content\">\n        <h1>App</h1>\n        <label>Search keyword</label>\n        <input value={keyword} onChange={(event)=> setKeyword(event.target.value)}></input>\n        <button onClick={handlerSearchClick}>Search</button>\n        <ApikeyManager/>\n        <Link to=\"/gifsearch/panda\">Gifs de pandas</Link>\n        <Link to=\"/gifsearch/perro\">Gifs de perros</Link>\n        <Link to=\"/gifsearch/gato\">Gifs de gatos</Link>\n\n        <Route\n          component={ListOfGifs}\n          path=\"/gifsearch/:keyword\"\n        />\n        <Route\n          component={GifDetailPage}\n          path=\"/gifdetail/:id\"\n        />\n       \n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ApikeyProvider } from './contexts/ApikeyManagerContext' \n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ApikeyProvider>\n        <App />\n      </ApikeyProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}